(()=>{"use strict";const e=(e,n)=>({save:()=>{const o=t(e);o.push(n);const l=JSON.stringify(o);localStorage.setItem(e,l)},override:()=>{localStorage.setItem(e,n)}}),t=e=>JSON.parse(localStorage.getItem(e))||JSON.parse(JSON.stringify([])),n=document.querySelector(".content"),o=(document.querySelector(".add-task"),()=>{const e=t("projectList"),n=("currentProjectId",JSON.parse(localStorage.getItem("currentProjectId")));let o=e[n];console.log(e),console.log(n),console.log(typeof n),console.log(`first project: ${e[0].name}`),console.log(`currentProject: ${o} `),console.log(`current project name: ${o.name}`),o.tasks.length&&console.log("at least 1 task(s)")}),l=()=>{const e=document.querySelector(".createTaskBtn"),t=document.querySelector(".cancelTaskBtn"),n=document.querySelector(".add-task"),o=document.querySelector(".overlay"),l=document.querySelector(".taskFormContainer");e.addEventListener("click",(()=>{console.log("create task btn clicked"),n.style.display="block",o.remove(),l.remove()})),t.addEventListener("click",(()=>{console.log("cancel task btn clicked"),n.style.display="block",o.remove(),l.remove()})),o.addEventListener("click",(()=>{n.style.display="block",o.remove(),l.remove()}))},r=()=>{const e=document.querySelector(".projectInput");let t=(e=>{const t=[];return{name:e,tasks:t,length:t.length}})(e.value);console.log(t),console.log(typeof t),s(),i(t),c(),e.value=""},i=t=>{e("projectList",t).save(),console.log(`save ${t.name} to local storage`)},c=()=>{let e=t("projectList");const n=document.querySelector(".projectContent");n.innerHTML="";for(let t=0;t<e.length;t++){const o=document.createElement("div"),l=document.createElement("div"),r=document.createElement("div"),i=document.createElement("div");o.classList.add("projectContainer"),o.setAttribute("data-project-id",t),l.textContent=e[t].name,r.textContent=e[t].length,r.classList.add("projectLength"),i.innerHTML='<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 64 64" enable-background="new 0 0 64 64" xml:space="preserve" fill="#ffffff"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="16" y1="24" x2="38" y2="24"></line> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="16" y1="34" x2="38" y2="34"></line> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="16" y1="44" x2="38" y2="44"></line> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="16" y1="54" x2="38" y2="54"></line> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="12" y1="24" x2="8" y2="24"></line> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="12" y1="34" x2="8" y2="34"></line> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="12" y1="44" x2="8" y2="44"></line> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="12" y1="54" x2="8" y2="54"></line> <polyline fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" points="14,8 1,8 1,63 45,63 45,8 32,8 "></polyline> <polygon fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" points="27,5 27,1 19,1 19,5 15,5 13,13 33,13 31,5 "></polygon> <polygon fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" points="55,1 55,54 59,62 63,54 63,1 "></polygon> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="55" y1="11" x2="63" y2="11"></line> </g></svg>',o.appendChild(i),o.appendChild(l),o.appendChild(r),n.appendChild(o)}};function d(){const e=document.querySelector(".add-project"),t=document.querySelector(".projectForm");e.style.display="none",t.style.display="block"}function s(){const e=document.querySelector(".add-project"),t=document.querySelector(".projectForm");e.style.display="block",t.style.display="none"}document.querySelector(".sidebar"),document.querySelector(".add-project"),c(),document.querySelector(".sidebar").appendChild((()=>{const e=document.createElement("div"),t=document.createElement("input"),n=document.createElement("div"),o=document.createElement("button"),l=document.createElement("button");return e.classList.add("projectForm"),n.classList.add("btnContainer"),t.setAttribute("type","text"),t.classList.add("projectInput"),t.placeholder="Project Name",o.textContent="Create",o.setAttribute("type","button"),o.classList.add("createBtn"),l.textContent="Cancel",l.setAttribute("type","button"),l.classList.add("cancelBtn"),n.appendChild(o),n.appendChild(l),e.appendChild(t),e.appendChild(n),{projectForm:e}})().projectForm),document.querySelector(".add-project").addEventListener("click",d),document.querySelector(".createBtn").addEventListener("click",r),document.querySelector(".cancelBtn").addEventListener("click",s),t("projectList"),document.querySelectorAll(".projectContainer").forEach((t=>{const r=t.getAttribute("data-project-id");console.log(t),console.log(r),t.addEventListener("click",(()=>{e("currentProjectId",r).override(),console.log(`save ${r} to local storage`),o(),(()=>{const e=document.querySelector(".add-task"),t=document.createElement("div"),o=document.createElement("div");o.innerHTML='<svg xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 24 24" width="24px" height="24px" fill-rule="evenodd"><path fill-rule="evenodd" d="M 11 2 L 11 11 L 2 11 L 2 13 L 11 13 L 11 22 L 13 22 L 13 13 L 22 13 L 22 11 L 13 11 L 13 2 Z"/></svg>\n    ';const l=document.createElement("div");null!==e&&e.remove(),t.classList.add("add-task"),l.innerHTML="ADD TASK",t.appendChild(o),t.appendChild(l),n.appendChild(t)})(),(()=>{const e=document.querySelector(".add-task");e.addEventListener("click",(()=>{e.style.display="none",(()=>{const e=document.createElement("div"),t=document.createElement("div");e.classList.add("overlay"),t.classList.add("taskFormContainer"),t.innerHTML='<form action="" method="">\n    <div class="form-control">\n        <div>\n            <label for="first-name">FIRST NAME *</label>\n            <input type="text" name="first-name" id="first-name" required placeholder="Jack"\n                minlength="2" maxlength="20">\n        </div>\n        <div>\n            <label for="last-name">LAST NAME *</label>\n            <input type="text" name="last-name" id="last-name" required \n                placeholder="Ryan" minlength="2" maxlength="20">\n        </div>\n        <div>\n            <label for="email">EMAIL *</label>\n            <input type="email" name="email" id="email" required \n                placeholder="example@gmail.com">\n        </div>\n        <div>\n            <label for="phone">PHONE NUMBER</label>\n            <input type="tel" name="phone" id="phone" placeholder="860 123 1234" \n                pattern="d{10}" title="Provide telephone number in this format: 860 123 1234 ">\n        </div>\n        <div>\n            <label for="pwd">PASSWORD *</label>\n            <input type="password" name="pwd" id="pwd" required\n                minlength="8" maxlength="20">\n        </div>\n        \n    </div>\n    <div class="btnContainers">\n        <div>\n            <button type="button" class="createTaskBtn">CREATE TASK</button>\n        </div>\n        <div>\n            <button type="button" class="cancelTaskBtn">CANCEL</button>\n        </div>\n    </div>\n    ',n.appendChild(e),n.appendChild(t)})(),l()}))})()}))})),document.querySelector(".projectForm").style.display="none"})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,