(()=>{"use strict";const e=e=>JSON.parse(localStorage.getItem(e))||JSON.parse(JSON.stringify([])),t=()=>{const e=document.querySelector(".projectInput");let t=(e=>{const t=[];return{name:e,tasks:t,length:t.length}})(e.value);console.log(t),console.log(typeof t),i(),o(t),n(),e.value=""},o=t=>{var o,n;(o="projectList",n=t,{save:()=>{const t=e(o);t.push(n);const r=JSON.stringify(t);localStorage.setItem(o,r)}}).save(),console.log(`save ${t.name} to local storage`)},n=()=>{let t=e("projectList");const o=document.querySelector(".projectContent");for(let e=0;e<t.length;e++){const n=document.createElement("div"),r=document.createElement("div"),i=document.createElement("div"),l=document.createElement("div");n.classList.add("projectContainer"),r.textContent=t[e].name,i.textContent=t[e].length,l.innerHTML='<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 64 64" enable-background="new 0 0 64 64" xml:space="preserve" fill="#ffffff"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="16" y1="24" x2="38" y2="24"></line> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="16" y1="34" x2="38" y2="34"></line> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="16" y1="44" x2="38" y2="44"></line> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="16" y1="54" x2="38" y2="54"></line> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="12" y1="24" x2="8" y2="24"></line> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="12" y1="34" x2="8" y2="34"></line> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="12" y1="44" x2="8" y2="44"></line> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="12" y1="54" x2="8" y2="54"></line> <polyline fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" points="14,8 1,8 1,63 45,63 45,8 32,8 "></polyline> <polygon fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" points="27,5 27,1 19,1 19,5 15,5 13,13 33,13 31,5 "></polygon> <polygon fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" points="55,1 55,54 59,62 63,54 63,1 "></polygon> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="55" y1="11" x2="63" y2="11"></line> </g></svg>',n.appendChild(l),n.appendChild(r),o.appendChild(n)}};function r(){const e=document.querySelector(".add-project"),t=document.querySelector(".projectForm");e.style.display="none",t.style.display="block"}function i(){const e=document.querySelector(".add-project"),t=document.querySelector(".projectForm");e.style.display="block",t.style.display="none"}document.querySelector(".sidebar"),document.querySelector(".add-project"),n(),document.querySelector(".sidebar").appendChild((()=>{const e=document.createElement("div"),t=document.createElement("input"),o=document.createElement("div"),n=document.createElement("button"),r=document.createElement("button");return e.classList.add("projectForm"),o.classList.add("btnContainer"),t.setAttribute("type","text"),t.classList.add("projectInput"),t.placeholder="Project Name",n.textContent="Create",n.setAttribute("type","button"),n.classList.add("createBtn"),r.textContent="Cancel",r.setAttribute("type","button"),r.classList.add("cancelBtn"),o.appendChild(n),o.appendChild(r),e.appendChild(t),e.appendChild(o),{projectForm:e}})().projectForm),document.querySelector(".add-project").addEventListener("click",r),document.querySelector(".createBtn").addEventListener("click",t),document.querySelector(".cancelBtn").addEventListener("click",i),document.querySelector(".projectForm").style.display="none"})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,