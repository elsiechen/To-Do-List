(()=>{"use strict";const e=(e,o)=>({save:()=>{const n=t(e);n.push(o);const l=JSON.stringify(n);localStorage.setItem(e,l)},override:()=>{localStorage.setItem(e,o)}}),t=e=>JSON.parse(localStorage.getItem(e))||JSON.parse(JSON.stringify([])),o=document.querySelector(".content"),n=(document.querySelector(".add-task"),()=>{const e=t("projectList"),o=("currentProjectId",JSON.parse(localStorage.getItem("currentProjectId")));let n=e[o];console.log(e),console.log(o),console.log(typeof o),console.log(`first project: ${e[0].name}`),console.log(`currentProject: ${n} `),console.log(`current project name: ${n.name}`),n.tasks.length&&console.log("at least 1 task(s)")}),l=()=>{const e=document.querySelector(".createTaskBtn"),t=document.querySelector(".cancelTaskBtn"),o=document.querySelector(".add-task"),n=document.querySelector(".overlay"),l=document.querySelector(".taskFormContainer");e.addEventListener("click",(e=>{e.preventDefault(),console.log("create task btn clicked"),r()&&((()=>{const e=document.querySelector("#title"),t=document.querySelector("#details"),o=document.querySelector("#due"),n=document.querySelector('input[name="priority"]:checked'),l=((e,t,o,n="Medium",l=!1)=>{let r=e,i=t,d=o,c=n,s=l;return{get title(){return r},set title(e){r=e},get details(){return i},set details(e){i=e},get dueDay(){return d},set dueDay(e){d=e},get priority(){return c},set priority(e){c=e},get completed(){return s},set completed(e){s=e}}})(e.value,t.value,o.value,n.value);console.log(l)})(),o.style.display="block",n.remove(),l.remove())})),t.addEventListener("click",(()=>{console.log("cancel task btn clicked"),o.style.display="block",n.remove(),l.remove()})),n.addEventListener("click",(()=>{o.style.display="block",n.remove(),l.remove()}))},r=()=>{const e=document.querySelector("#title"),t=document.querySelector("#due"),o=document.querySelector(".titleDiv"),n=document.querySelector(".dueDiv");let l=document.createElement("div"),r=document.createElement("div");l.classList.add("titleError"),r.classList.add("dueError");const i=document.querySelector(".titleError"),d=document.querySelector(".dueError");return i&&i.remove(),d&&d.remove(),o.appendChild(l),n.appendChild(r),e.value.length<2?(l.innerHTML="Please enter title for at least two letters.",!1):(l.innerHTML="",""===t.value?(r.innerHTML="Please enter due date.",!1):(r.innerHTML="",console.log("Form is valid"),!0))},i=()=>{const e=document.querySelector(".projectInput");let t=(e=>{const t=[];return{name:e,tasks:t,length:t.length}})(e.value);console.log(t),console.log(typeof t),a(),d(t),c(),e.value=""},d=t=>{e("projectList",t).save(),console.log(`save ${t.name} to local storage`)},c=()=>{let e=t("projectList");const o=document.querySelector(".projectContent");o.innerHTML="";for(let t=0;t<e.length;t++){const n=document.createElement("div"),l=document.createElement("div"),r=document.createElement("div"),i=document.createElement("div");n.classList.add("projectContainer"),n.setAttribute("data-project-id",t),l.textContent=e[t].name,r.textContent=e[t].length,r.classList.add("projectLength"),i.innerHTML='<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 64 64" enable-background="new 0 0 64 64" xml:space="preserve" fill="#ffffff"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="16" y1="24" x2="38" y2="24"></line> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="16" y1="34" x2="38" y2="34"></line> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="16" y1="44" x2="38" y2="44"></line> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="16" y1="54" x2="38" y2="54"></line> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="12" y1="24" x2="8" y2="24"></line> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="12" y1="34" x2="8" y2="34"></line> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="12" y1="44" x2="8" y2="44"></line> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="12" y1="54" x2="8" y2="54"></line> <polyline fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" points="14,8 1,8 1,63 45,63 45,8 32,8 "></polyline> <polygon fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" points="27,5 27,1 19,1 19,5 15,5 13,13 33,13 31,5 "></polygon> <polygon fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" points="55,1 55,54 59,62 63,54 63,1 "></polygon> <line fill="none" stroke="#ffffff" stroke-width="2" stroke-miterlimit="10" x1="55" y1="11" x2="63" y2="11"></line> </g></svg>',n.appendChild(i),n.appendChild(l),n.appendChild(r),o.appendChild(n)}};function s(){const e=document.querySelector(".add-project"),t=document.querySelector(".projectForm");e.style.display="none",t.style.display="block"}function a(){const e=document.querySelector(".add-project"),t=document.querySelector(".projectForm");e.style.display="block",t.style.display="none"}document.querySelector(".sidebar"),document.querySelector(".add-project"),c(),document.querySelector(".sidebar").appendChild((()=>{const e=document.createElement("div"),t=document.createElement("input"),o=document.createElement("div"),n=document.createElement("button"),l=document.createElement("button");return e.classList.add("projectForm"),o.classList.add("btnContainer"),t.setAttribute("type","text"),t.classList.add("projectInput"),t.placeholder="Project Name",n.textContent="Create",n.setAttribute("type","button"),n.classList.add("createBtn"),l.textContent="Cancel",l.setAttribute("type","button"),l.classList.add("cancelBtn"),o.appendChild(n),o.appendChild(l),e.appendChild(t),e.appendChild(o),{projectForm:e}})().projectForm),document.querySelector(".add-project").addEventListener("click",s),document.querySelector(".createBtn").addEventListener("click",i),document.querySelector(".cancelBtn").addEventListener("click",a),t("projectList"),document.querySelectorAll(".projectContainer").forEach((t=>{const r=t.getAttribute("data-project-id");console.log(t),console.log(r),t.addEventListener("click",(()=>{e("currentProjectId",r).override(),console.log(`save ${r} to local storage`),n(),(()=>{const e=document.querySelector(".add-task"),t=document.createElement("div"),n=document.createElement("div");n.innerHTML='<svg xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 24 24" width="24px" height="24px" fill-rule="evenodd"><path fill-rule="evenodd" d="M 11 2 L 11 11 L 2 11 L 2 13 L 11 13 L 11 22 L 13 22 L 13 13 L 22 13 L 22 11 L 13 11 L 13 2 Z"/></svg>\n    ';const l=document.createElement("div");null!==e&&e.remove(),t.classList.add("add-task"),l.classList.add("add-div"),l.innerHTML="ADD TASK",t.appendChild(n),t.appendChild(l),o.appendChild(t)})(),(()=>{const e=document.querySelector(".add-task");e.addEventListener("click",(()=>{e.style.display="none",(()=>{const e=document.createElement("div"),t=document.createElement("div");e.classList.add("overlay"),t.classList.add("taskFormContainer"),t.innerHTML='<form action="" method="" id="taskForm">\n        <div class="form-control">\n            <div class="titleDiv">\n                <label for="title">TITLE: *</label>\n                <input type="text" name="title" id="title" required placeholder="LeetCode"\n                    minlength="2" maxlength="20" autofocus>\n            </div>\n            <div>\n                <label for="details">DETAILS: </label>\n                <textarea name="details" id="details" rows="4" cols="50">\n                </textarea>\n            </div>\n            <div class="dueDiv">\n                <label for="due">DUE DATE: *</label>\n                <input type="date" name="due" id="due" required \n                    placeholder="05/22/2023">\n            </div>\n            <div>\n                <label for="priority">PRIORITY: *</label>\n                <div class="priority">\n                    <input type="radio" id="high" name="priority" value="HIGH">\n                    <label for="high">HIGH</label>\n                    <input type="radio" id="medium" name="priority" value="MEDIUM" checked>\n                    <label for="medium">MEDIUM</label>\n                    <input type="radio" id="low" name="priority" value="LOW">\n                    <label for="low">LOW</label>\n                </div>\n            </div>\n            <div class="taskBtnContainer">\n                <button type="button" class="createTaskBtn">CREATE TASK</button>\n                <button type="button" class="cancelTaskBtn">CANCEL</button>\n                \x3c!--Use input type="submit" to enable form built-in validations--\x3e\n                \x3c!--input type="submit" class="createTaskBtn" value="CREATE TASK"--\x3e\n            </div>\n        </div>\n    </form>',o.appendChild(e),o.appendChild(t)})(),l()}))})()}))})),document.querySelector(".projectForm").style.display="none"})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,