(()=>{"use strict";const e=(e,t)=>({save:()=>{localStorage.setItem(e,JSON.stringify(t)),console.log(`save ${t} to ${e}`)},get:()=>JSON.parse(localStorage.getItem(e))});let t=localStorage.getItem("projectList");t=t?JSON.parse(t):[];const o=()=>{const e=(e=>{const t=[];return{name:document.querySelector(".projectInput").value,tasks:t,length:t.length}})();r(),c(e)},c=t=>{console.log(typeof e()),e("projectList",t).save()};function n(){const e=document.querySelector(".add-project"),t=document.querySelector(".projectForm");e.style.display="none",t.style.display="block"}function r(){const e=document.querySelector(".add-project"),t=document.querySelector(".projectForm");e.style.display="block",t.style.display="none"}document.querySelector(".sidebar"),document.querySelector(".add-project"),document.querySelector(".sidebar").appendChild((()=>{const e=document.createElement("div"),t=document.createElement("input"),o=document.createElement("div"),c=document.createElement("button"),n=document.createElement("button");return e.classList.add("projectForm"),o.classList.add("btnContainer"),t.setAttribute("type","text"),t.classList.add("projectInput"),t.placeholder="Project Name",c.textContent="Create",c.setAttribute("type","button"),c.classList.add("createBtn"),n.textContent="Cancel",n.setAttribute("type","button"),n.classList.add("cancelBtn"),o.appendChild(c),o.appendChild(n),e.appendChild(t),e.appendChild(o),{projectForm:e}})().projectForm),document.querySelector(".add-project").addEventListener("click",n),document.querySelector(".createBtn").addEventListener("click",o),document.querySelector(".cancelBtn").addEventListener("click",r),document.querySelector(".projectForm").style.display="none"})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQUEsTUFBTUEsRUFBVSxDQUFDQyxFQUFLQyxLQVVYLENBQUVDLEtBVEksS0FDVEMsYUFBYUMsUUFBUUosRUFBS0ssS0FBS0MsVUFBVUwsSUFDekNNLFFBQVFDLElBQUksUUFBUVAsUUFBWUQsSUFBTSxFQU8zQlMsSUFKSCxJQUNESixLQUFLSyxNQUFNUCxhQUFhUSxRQUFRWCxNQ0ovQyxJQUFJWSxFQUFjVCxhQUFhUSxRQUFRLGVBQ3ZDQyxFQUFjQSxFQUFhUCxLQUFLSyxNQUFNRSxHQUFjLEdBRXBELE1BT01DLEVBQXNCLEtBQ3hCLE1BQ01DLEVBVE0sQ0FBQ0MsSUFDYixNQUFNQyxFQUFRLEdBR2QsTUFBTyxDQUFFRCxLQUlZRSxTQUFTQyxjQUFjLGlCQUNKakIsTUFMekJlLFFBQU9HLE9BRlBILEVBQU1HLE9BRVEsRUFLVkMsR0FFbkJDLElBQ0FDLEVBQW1CUixFQUFXLEVBRzVCUSxFQUFzQkYsSUFDeEJiLFFBQVFDLFdBQVdULEtBQ25CQSxFQUFRLGNBQWNxQixHQUFTbEIsTUFBTSxFQ21CekMsU0FBU3FCLElBQ0wsTUFBTUMsRUFBZ0JQLFNBQVNDLGNBQWMsZ0JBQ3ZDTyxFQUFjUixTQUFTQyxjQUFjLGdCQUczQ00sRUFBY0UsTUFBTUMsUUFBVSxPQUU5QkYsRUFBWUMsTUFBTUMsUUFBVSxPQUNoQyxDQUVBLFNBQVNOLElBQ0wsTUFBTUcsRUFBZ0JQLFNBQVNDLGNBQWMsZ0JBQ3ZDTyxFQUFjUixTQUFTQyxjQUFjLGdCQUczQ00sRUFBY0UsTUFBTUMsUUFBVSxRQUU5QkYsRUFBWUMsTUFBTUMsUUFBVSxNQUNoQyxDQTFEZ0JWLFNBQVNDLGNBQWMsWUFDakJELFNBQVNDLGNBQWMsZ0JBaUN6QkQsU0FBU0MsY0FBYyxZQUcvQlUsWUFsQ1EsTUFDaEIsTUFBTUgsRUFBY1IsU0FBU1ksY0FBYyxPQUNyQ0MsRUFBUWIsU0FBU1ksY0FBYyxTQUMvQkUsRUFBZWQsU0FBU1ksY0FBYyxPQUN0Q0csRUFBWWYsU0FBU1ksY0FBYyxVQUNuQ0ksRUFBWWhCLFNBQVNZLGNBQWMsVUFzQnpDLE9BcEJBSixFQUFZUyxVQUFVQyxJQUFJLGVBQzFCSixFQUFhRyxVQUFVQyxJQUFJLGdCQUUzQkwsRUFBTU0sYUFBYSxPQUFRLFFBQzNCTixFQUFNSSxVQUFVQyxJQUFJLGdCQUNwQkwsRUFBTU8sWUFBYyxlQUVwQkwsRUFBVU0sWUFBYyxTQUN4Qk4sRUFBVUksYUFBYSxPQUFRLFVBQy9CSixFQUFVRSxVQUFVQyxJQUFJLGFBRXhCRixFQUFVSyxZQUFjLFNBQ3hCTCxFQUFVRyxhQUFhLE9BQVEsVUFDL0JILEVBQVVDLFVBQVVDLElBQUksYUFFeEJKLEVBQWFILFlBQVlJLEdBQ3pCRCxFQUFhSCxZQUFZSyxHQUN6QlIsRUFBWUcsWUFBWUUsR0FDeEJMLEVBQVlHLFlBQVlHLEdBRWpCLENBQUVOLGNBQWEsRUFPRmMsR0FBY2QsYUF3QlpSLFNBQVNDLGNBQWMsZ0JBQy9Cc0IsaUJBQWlCLFFBQVFqQixHQUVyQk4sU0FBU0MsY0FBYyxjQUMvQnNCLGlCQUFpQixRQUFTM0IsR0FFbEJJLFNBQVNDLGNBQWMsY0FDL0JzQixpQkFBaUIsUUFBU25CLEdDaEVwQkosU0FBU0MsY0FBYyxnQkFDL0JRLE1BQU1DLFFBQVUsTSIsInNvdXJjZXMiOlsid2VicGFjazovL3RvLWRvLWxpc3QvLi9zcmMvbW9kdWxlcy9zdG9yYWdlLmpzIiwid2VicGFjazovL3RvLWRvLWxpc3QvLi9zcmMvbW9kdWxlcy9wcm9qZWN0LmpzIiwid2VicGFjazovL3RvLWRvLWxpc3QvLi9zcmMvbW9kdWxlcy9wcm9qZWN0Rm9ybS5qcyIsIndlYnBhY2s6Ly90by1kby1saXN0Ly4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHN0b3JhZ2UgPSAoa2V5LCB2YWx1ZSkgPT4ge1xuICAgIGNvbnN0IHNhdmUgPSAoKSA9PiB7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGtleSwgSlNPTi5zdHJpbmdpZnkodmFsdWUpKTtcbiAgICAgICAgY29uc29sZS5sb2coYHNhdmUgJHt2YWx1ZX0gdG8gJHtrZXl9YCk7XG4gICAgfTtcbiAgICBcbiAgICBjb25zdCBnZXQgPSAoKSA9PiB7XG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSkpO1xuICAgIH07XG4gICAgXG4gICAgcmV0dXJuIHsgc2F2ZSwgZ2V0IH07XG59O1xuXG5leHBvcnQgeyBzdG9yYWdlIH07IiwiaW1wb3J0IHsgc3RvcmFnZSB9IGZyb20gJy4vc3RvcmFnZSc7XG5pbXBvcnQgIHsgaGlkZUZvcm0gfSAgZnJvbSAnLi9wcm9qZWN0Rm9ybSc7XG5cbmxldCBwcm9qZWN0TGlzdCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdwcm9qZWN0TGlzdCcpO1xucHJvamVjdExpc3QgPSBwcm9qZWN0TGlzdD8gSlNPTi5wYXJzZShwcm9qZWN0TGlzdCk6IFtdO1xuXG5jb25zdCBwcm9qZWN0ID0gKG5hbWUpID0+IHtcbiAgICBjb25zdCB0YXNrcyA9IFtdO1xuICAgIGNvbnN0IGxlbmd0aCA9IHRhc2tzLmxlbmd0aDtcblxuICAgIHJldHVybiB7IG5hbWUsIHRhc2tzLCBsZW5ndGggfVxufTtcblxuY29uc3QgcHJvY2Vzc1Byb2plY3RJbnB1dCA9ICgpID0+IHtcbiAgICBjb25zdCBwcm9qZWN0SW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvamVjdElucHV0Jyk7XG4gICAgY29uc3QgbmV3UHJvamVjdCA9IHByb2plY3QocHJvamVjdElucHV0LnZhbHVlKTtcblxuICAgIGhpZGVGb3JtKCk7XG4gICAgc2F2ZVRvTG9jYWxTdG9yYWdlKG5ld1Byb2plY3QpO1xufTtcblxuY29uc3Qgc2F2ZVRvTG9jYWxTdG9yYWdlID0gKHByb2plY3QpID0+IHtcbiAgICBjb25zb2xlLmxvZyh0eXBlb2Ygc3RvcmFnZSgpKVxuICAgIHN0b3JhZ2UoJ3Byb2plY3RMaXN0Jyxwcm9qZWN0KS5zYXZlKCk7XG59O1xuXG5leHBvcnQgeyBwcm9jZXNzUHJvamVjdElucHV0IH07IiwiaW1wb3J0IHsgcHJvY2Vzc1Byb2plY3RJbnB1dCB9IGZyb20gXCIuL3Byb2plY3RcIjtcblxuY29uc3Qgc2lkZWJhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaWRlYmFyJyk7XG5jb25zdCBhZGRQcm9qZWN0QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFkZC1wcm9qZWN0Jyk7XG5cbmNvbnN0IFByb2plY3RGb3JtID0gKCkgPT4ge1xuICAgIGNvbnN0IHByb2plY3RGb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIGNvbnN0IGJ0bkNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnN0IGNyZWF0ZUJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIGNvbnN0IGNhbmNlbEJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuXG4gICAgcHJvamVjdEZvcm0uY2xhc3NMaXN0LmFkZCgncHJvamVjdEZvcm0nKTtcbiAgICBidG5Db250YWluZXIuY2xhc3NMaXN0LmFkZCgnYnRuQ29udGFpbmVyJyk7XG5cbiAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dCcpO1xuICAgIGlucHV0LmNsYXNzTGlzdC5hZGQoJ3Byb2plY3RJbnB1dCcpO1xuICAgIGlucHV0LnBsYWNlaG9sZGVyID0gJ1Byb2plY3QgTmFtZSc7XG5cbiAgICBjcmVhdGVCdG4udGV4dENvbnRlbnQgPSAnQ3JlYXRlJztcbiAgICBjcmVhdGVCdG4uc2V0QXR0cmlidXRlKCd0eXBlJywgJ2J1dHRvbicpO1xuICAgIGNyZWF0ZUJ0bi5jbGFzc0xpc3QuYWRkKCdjcmVhdGVCdG4nKTtcblxuICAgIGNhbmNlbEJ0bi50ZXh0Q29udGVudCA9ICdDYW5jZWwnO1xuICAgIGNhbmNlbEJ0bi5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnYnV0dG9uJyk7XG4gICAgY2FuY2VsQnRuLmNsYXNzTGlzdC5hZGQoJ2NhbmNlbEJ0bicpO1xuXG4gICAgYnRuQ29udGFpbmVyLmFwcGVuZENoaWxkKGNyZWF0ZUJ0bik7XG4gICAgYnRuQ29udGFpbmVyLmFwcGVuZENoaWxkKGNhbmNlbEJ0bik7XG4gICAgcHJvamVjdEZvcm0uYXBwZW5kQ2hpbGQoaW5wdXQpO1xuICAgIHByb2plY3RGb3JtLmFwcGVuZENoaWxkKGJ0bkNvbnRhaW5lcik7XG5cbiAgICByZXR1cm4geyBwcm9qZWN0Rm9ybSB9O1xufTtcblxuY29uc3QgcmVuZGVyUHJvamVjdEZvcm0gPSAoKSA9PiB7XG4gICAgY29uc3Qgc2lkZWJhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaWRlYmFyJyk7XG5cbiAgICAvLyBBcHBlbmQgZm9ybSB0byBwcm9qZWN0Q29udGVudFxuICAgIHNpZGViYXIuYXBwZW5kQ2hpbGQoUHJvamVjdEZvcm0oKS5wcm9qZWN0Rm9ybSk7XG59O1xuXG5mdW5jdGlvbiBzaG93Rm9ybSgpIHtcbiAgICBjb25zdCBhZGRQcm9qZWN0QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFkZC1wcm9qZWN0Jyk7XG4gICAgY29uc3QgcHJvamVjdEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvamVjdEZvcm0nKTtcblxuICAgIC8vIEhpZGUgYWRkUHJvamVjdEJ0blxuICAgIGFkZFByb2plY3RCdG4uc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAvLyBzaG93IGZvcm1cbiAgICBwcm9qZWN0Rm9ybS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbn1cblxuZnVuY3Rpb24gaGlkZUZvcm0oKSB7XG4gICAgY29uc3QgYWRkUHJvamVjdEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGQtcHJvamVjdCcpO1xuICAgIGNvbnN0IHByb2plY3RGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2plY3RGb3JtJyk7XG5cbiAgICAvLyBIaWRlIGFkZFByb2plY3RCdG5cbiAgICBhZGRQcm9qZWN0QnRuLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgIC8vIHNob3cgZm9ybVxuICAgIHByb2plY3RGb3JtLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG59O1xuXG5jb25zdCBldmVudExpc3RlbmVycyA9ICgpID0+IHtcbiAgICBjb25zdCBhZGRQcm9qZWN0QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFkZC1wcm9qZWN0Jyk7XG4gICAgYWRkUHJvamVjdEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsc2hvd0Zvcm0pO1xuXG4gICAgY29uc3QgY3JlYXRlQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNyZWF0ZUJ0bicpO1xuICAgIGNyZWF0ZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHByb2Nlc3NQcm9qZWN0SW5wdXQpO1xuXG4gICAgY29uc3QgY2FuY2VsQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNhbmNlbEJ0bicpO1xuICAgIGNhbmNlbEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhpZGVGb3JtKTtcbn07XG5cblxuZXhwb3J0ICB7IHJlbmRlclByb2plY3RGb3JtLCBoaWRlRm9ybSwgZXZlbnRMaXN0ZW5lcnMgfTtcbiIsImltcG9ydCAgeyByZW5kZXJQcm9qZWN0Rm9ybSwgZXZlbnRMaXN0ZW5lcnMgfSAgZnJvbSAnLi9tb2R1bGVzL3Byb2plY3RGb3JtJztcblxucmVuZGVyUHJvamVjdEZvcm0oKTtcbmV2ZW50TGlzdGVuZXJzKCk7XG5cbi8vIGRlZmF1bHQ6IGhpZGUgcHJvamVjdEZvcm1cbmNvbnN0IHByb2plY3RGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2plY3RGb3JtJyk7XG5wcm9qZWN0Rm9ybS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOyJdLCJuYW1lcyI6WyJzdG9yYWdlIiwia2V5IiwidmFsdWUiLCJzYXZlIiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsIkpTT04iLCJzdHJpbmdpZnkiLCJjb25zb2xlIiwibG9nIiwiZ2V0IiwicGFyc2UiLCJnZXRJdGVtIiwicHJvamVjdExpc3QiLCJwcm9jZXNzUHJvamVjdElucHV0IiwibmV3UHJvamVjdCIsIm5hbWUiLCJ0YXNrcyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImxlbmd0aCIsInByb2plY3QiLCJoaWRlRm9ybSIsInNhdmVUb0xvY2FsU3RvcmFnZSIsInNob3dGb3JtIiwiYWRkUHJvamVjdEJ0biIsInByb2plY3RGb3JtIiwic3R5bGUiLCJkaXNwbGF5IiwiYXBwZW5kQ2hpbGQiLCJjcmVhdGVFbGVtZW50IiwiaW5wdXQiLCJidG5Db250YWluZXIiLCJjcmVhdGVCdG4iLCJjYW5jZWxCdG4iLCJjbGFzc0xpc3QiLCJhZGQiLCJzZXRBdHRyaWJ1dGUiLCJwbGFjZWhvbGRlciIsInRleHRDb250ZW50IiwiUHJvamVjdEZvcm0iLCJhZGRFdmVudExpc3RlbmVyIl0sInNvdXJjZVJvb3QiOiIifQ==